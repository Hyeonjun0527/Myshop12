<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--PurchaseMapper인터페이스의 FQCN은 com.model2.mvc.service.domain.Purchase이다.-->
<mapper namespace="myshop12.com.model2.mvc.purchase.repository.PurchaseDao">

	<resultMap id="purchaseSelectMap" type="map">
		<id property="tranNo" column="tran_no" jdbcType="NUMERIC"/>
		<result property="count" column="count" jdbcType="NUMERIC"/>
		<association property="purchase" javaType="purchase">
			<id property="tranNo" column="tran_no" jdbcType="NUMERIC"/>
			<result property="paymentOption" column="payment_option" jdbcType="VARCHAR"/>
			<result property="receiverName" column="receiver_name" jdbcType="VARCHAR"/>
			<result property="receiverPhone" column="receiver_phone" jdbcType="VARCHAR"/>
			<result property="divyAddr" column="demailaddr" jdbcType="VARCHAR"/>
			<result property="divyRequest" column="dlvy_request" jdbcType="VARCHAR"/>
			<result property="tranCode" column="tran_status_code" jdbcType="VARCHAR"/>
			<result property="orderDate" column="order_date" jdbcType="DATE"/>
			<result property="divyDate" column="dlvy_date" jdbcType="DATE"/>
			<result property="totalPrice" column="total_price" jdbcType="NUMERIC"/>

			<association property="buyer" column="buyer_id" select="UserMapper.getUser"/>
			<!-- purchaseDetailList 연관 객체 매핑 -->
			<collection property="purchaseDetailList" javaType="java.util.List" ofType="PurchaseDetail">
				<id property="detailNo" column="detail_no" jdbcType="NUMERIC"/>
				<result property="tranNo" column="tran_no" jdbcType="NUMERIC"/>
				<result property="typeQuantity" column="type_quantity" jdbcType="NUMERIC"/>
				<result property="typePrice" column="type_price" jdbcType="NUMERIC"/>
				<association property="product" column="prod_no" select="ProductMapper.findProduct"/>
			</collection>
		</association>
	</resultMap>

	<resultMap id="purchaseSelectUnit" type="purchase">
		<id property="tranNo" column="tran_no" jdbcType="NUMERIC"/>
		<result property="paymentOption" column="payment_option" jdbcType="VARCHAR"/>
		<result property="receiverName" column="receiver_name" jdbcType="VARCHAR"/>
		<result property="receiverPhone" column="receiver_phone" jdbcType="VARCHAR"/>
		<result property="divyAddr" column="demailaddr" jdbcType="VARCHAR"/>
		<result property="divyRequest" column="dlvy_request" jdbcType="VARCHAR"/>
		<result property="tranCode" column="tran_status_code" jdbcType="VARCHAR"/>
		<result property="orderDate" column="order_date" jdbcType="DATE"/>
		<result property="divyDate" column="dlvy_date" jdbcType="DATE"/>
		<result property="totalPrice" column="total_price" jdbcType="NUMERIC"/>
		<association property="buyer" column="buyer_id" select="UserMapper.getUser"/>
		<collection property="purchaseDetailList" javaType="java.util.List" ofType="PurchaseDetail">
			<id property="detailNo" column="detail_no" jdbcType="NUMERIC"/>
			<result property="tranNo" column="tran_no" jdbcType="NUMERIC"/>
			<result property="typeQuantity" column="type_quantity" jdbcType="NUMERIC"/>
			<result property="typePrice" column="type_price" jdbcType="NUMERIC"/>
			<association property="product" column="prod_no" select="ProductMapper.findProduct"/>
		</collection>
	</resultMap>

	<!--autoGenerated Key ProdNo에 사용-->
	<insert id="addPurchase" parameterType="purchase" useGeneratedKeys="true" keyProperty="tranNo" keyColumn="tran_no">
		INSERT INTO transaction(
			tran_no, buyer_id, payment_option, receiver_name, receiver_phone, demailaddr, dlvy_request, tran_status_code, order_date, dlvy_date,total_price
		) VALUES (
		seq_transaction_tran_no.nextval, #{buyer.userId}, #{paymentOption}, #{receiverName}, #{receiverPhone}, #{divyAddr}, #{divyRequest}, 'b', SYSDATE, #{divyDate},#{totalPrice}
		)
	</insert>

	<insert id="addPurchaseDetail" parameterType="purchaseDetail" useGeneratedKeys="true" keyProperty="detailNo" keyColumn="detail_no">
			INSERT INTO transactionDetail(
			detail_no, tran_no, prod_no,TYPE_QUANTITY, type_price
		) VALUES (
			 seq_tranDetail_detail_no.nextval, #{tranNo}, #{product.prodNo},#{typeQuantity}, #{typePrice}
		)
	</insert>

	<select id="getPurchase" parameterType="Integer" resultMap="purchaseSelectUnit">
		select
		t.TRAN_NO,
		t.buyer_id,
		t.PAYMENT_OPTION,
		t.RECEIVER_NAME,
		t.RECEIVER_PHONE,
		t.DEMAILADDR ,
		t.DLVY_REQUEST ,
		t.TRAN_STATUS_CODE ,
		t.ORDER_DATE ,
		t.DLVY_DATE ,
		p.PROD_NO ,
		p.PROD_NAME ,
		p.PROD_DETAIL ,
		p.MANUFACTURE_DAY ,
		p.PRICE ,
		p.IMAGE_FILE ,
		p.REG_DATE ,
		p.STOCK_QUANTITY,
		t.TRAN_STATUS_CODE ,
		u.USER_ID ,
		u.USER_NAME ,
		u.PASSWORD ,
		u.ROLE ,
		u.SSN ,
		u.CELL_PHONE ,
		u.ADDR ,
		u.EMAIL ,
		u.REG_DATE,
		td.DETAIL_NO ,
		td.TYPE_QUANTITY,
		td.TYPE_PRICE
		FROM TRANSACTION t
		JOIN USERS u ON t.buyer_id = u.user_id
		JOIN TRANSACTIONDETAIL td ON t.TRAN_NO = td.TRAN_NO
		JOIN PRODUCT p ON td.PROD_NO = p.PROD_NO
		WHERE t.TRAN_NO=#{tranNo}
	</select>

<!--	<select id="getPurchaseProdNo" parameterType="Integer" resultMap="purchaseSelectUnit">-->
<!--		select-->
<!--			t.TRAN_NO,-->
<!--			t.buyer_id,-->
<!--			t.PAYMENT_OPTION,-->
<!--			t.RECEIVER_NAME,-->
<!--			t.RECEIVER_PHONE,-->
<!--			t.DEMAILADDR ,-->
<!--			t.DLVY_REQUEST ,-->
<!--			t.TRAN_STATUS_CODE ,-->
<!--			t.ORDER_DATE ,-->
<!--			t.DLVY_DATE ,-->
<!--			t.TOTAL_PRICE ,-->
<!--			p.PROD_NO ,-->
<!--			p.PROD_NAME ,-->
<!--			p.PROD_DETAIL ,-->
<!--			p.MANUFACTURE_DAY ,-->
<!--			p.PRICE ,-->
<!--			p.IMAGE_FILE ,-->
<!--			p.REG_DATE ,-->
<!--			p.STOCK_QUANTITY,-->
<!--			t.TRAN_STATUS_CODE ,-->
<!--			u.USER_ID ,-->
<!--			u.USER_NAME ,-->
<!--			u.PASSWORD ,-->
<!--			u.ROLE ,-->
<!--			u.SSN ,-->
<!--			u.CELL_PHONE ,-->
<!--			u.ADDR ,-->
<!--			u.EMAIL ,-->
<!--			u.REG_DATE user_reg_date,-->
<!--			td.DETAIL_NO ,-->
<!--			td.TYPE_QUANTITY ,-->
<!--			td.TYPE_PRICE,-->
<!--		FROM TRANSACTION t-->
<!--		INNER JOIN USERS u ON t.buyer_id = u.user_id-->
<!--		INNER JOIN TRANSACTION_DETAIL td ON t.TRAN_NO = td.TRAN_NO-->
<!--		INNER JOIN PRODUCT p ON td.PROD_NO = p.PROD_NO-->
<!--		WHERE t.PROD_NO=#{prodNo}-->
<!--	</select>-->

	<select id="getPurchaseList" parameterType="map" resultMap="purchaseSelectMap">
		WITH result AS
				 (SELECT t.tran_no,
						 t.buyer_id,
						 t.payment_option,
						 t.receiver_name,
						 t.receiver_phone,
						 t.dlvy_addr,
						 t.dlvy_request,
						 t.tran_status_code,
						 t.order_date,
						 t.dlvy_date,
						 t.total_price,
						 p.PROD_NAME                            AS prod_name,
						 p.PROD_DETAIL                          AS prod_detail,
						 p.MANUFACTURE_DAY                      AS manufacture_day,
						 p.PRICE                                AS price,
						 p.IMAGE_FILE                           AS image_file,
						 p.REG_DATE                             AS reg_date,
						 p.STOCK_QUANTITY                       AS stock_quantity,
						 td.DETAIL_NO                           AS detail_no,
						 td.PROD_NO                             AS prod_no,
						 td.TYPE_QUANTITY                       AS type_quantity,
						 td.TYPE_PRICE                          AS type_price,
						 COUNT(*) OVER ()                       AS count,
						 DENSE_RANK() OVER (ORDER BY t.TRAN_NO ASC) AS row_seq
		FROM (SELECT t.TRAN_NO          AS tran_no,
			t.BUYER_ID         AS buyer_id,
			t.PAYMENT_OPTION   AS payment_option,
			t.RECEIVER_NAME    AS receiver_name,
			t.RECEIVER_PHONE   AS receiver_phone,
			t.DEMAILADDR       AS dlvy_addr,
			t.DLVY_REQUEST     AS dlvy_request,
			t.TRAN_STATUS_CODE AS tran_status_code,
			t.ORDER_DATE       AS order_date,
			t.DLVY_DATE        AS dlvy_date,
			t.TOTAL_PRICE      AS total_price
			FROM TRANSACTION t
			WHERE t.BUYER_ID = #{map.user.userId}
			ORDER BY t.TRAN_NO) t
			INNER JOIN TRANSACTIONDETAIL td ON t.TRAN_NO = td.TRAN_NO
			INNER JOIN PRODUCT P ON td.PROD_NO = p.PROD_NO)
		SELECT *
		FROM result
		WHERE
			result.row_seq BETWEEN #{map.search.startRowNum} AND #{map.search.endRowNum}
	</select>
	<select id="getSaleList" parameterType="map" resultMap="purchaseSelectMap">
		WITH result AS
				 (SELECT t.tran_no,
						 t.buyer_id,
						 t.payment_option,
						 t.receiver_name,
						 t.receiver_phone,
						 t.dlvy_addr,
						 t.dlvy_request,
						 t.tran_status_code,
						 t.order_date,
						 t.dlvy_date,
						 t.total_price,
						 p.PROD_NAME                            AS prod_name,
						 p.PROD_DETAIL                          AS prod_detail,
						 p.MANUFACTURE_DAY                      AS manufacture_day,
						 p.PRICE                                AS price,
						 p.IMAGE_FILE                           AS image_file,
						 p.REG_DATE                             AS reg_date,
						 p.STOCK_QUANTITY                       AS stock_quantity,
						 td.DETAIL_NO                           AS detail_no,
						 td.PROD_NO                             AS prod_no,
						 td.TYPE_QUANTITY                       AS type_quantity,
						 td.TYPE_PRICE                          AS type_price,
						 COUNT(*) OVER ()                       AS count,
			DENSE_RANK() OVER (ORDER BY t.TRAN_NO ASC) AS row_seq
		FROM (SELECT t.TRAN_NO          AS tran_no,
			t.BUYER_ID         AS buyer_id,
			t.PAYMENT_OPTION   AS payment_option,
			t.RECEIVER_NAME    AS receiver_name,
			t.RECEIVER_PHONE   AS receiver_phone,
			t.DEMAILADDR       AS dlvy_addr,
			t.DLVY_REQUEST     AS dlvy_request,
			t.TRAN_STATUS_CODE AS tran_status_code,
			t.ORDER_DATE       AS order_date,
			t.DLVY_DATE        AS dlvy_date,
			t.TOTAL_PRICE      AS total_price
			FROM TRANSACTION t
			ORDER BY t.TRAN_NO) t
			INNER JOIN TRANSACTIONDETAIL td ON t.TRAN_NO = td.TRAN_NO
			INNER JOIN PRODUCT P ON td.PROD_NO = p.PROD_NO)
		SELECT *
		FROM result
		WHERE
			result.row_seq BETWEEN #{map.search.startRowNum} AND #{map.search.endRowNum}
	</select>

	<update id="updatePurchase" parameterType="purchase">
		UPDATE TRANSACTION
		<set>
		PAYMENT_OPTION=#{paymentOption},
		RECEIVER_NAME=#{receiverName},
		RECEIVER_PHONE=#{receiverPhone},
		DEMAILADDR=#{divyAddr},
		DLVY_REQUEST=#{divyRequest},
		TRAN_STATUS_CODE=#{tranCode},
		ORDER_DATE=SYSDATE,
		DLVY_DATE=#{divyDate},
		TOTAL_PRICE=#{totalPrice}
		</set>
		WHERE TRAN_NO=#{tranNo}
	</update>

	<update id="updateTranCode" parameterType="purchase">
		UPDATE TRANSACTION
		SET TRAN_STATUS_CODE=#{tranCode}
		WHERE TRAN_NO=#{tranNo}
	</update>



</mapper>